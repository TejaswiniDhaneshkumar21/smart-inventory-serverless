name: Deploy to AWS Fargate

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Deploy Django to AWS Fargate
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to ECR
      env:
        ECR_REPO: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: latest
      run: |
        IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${ECR_REPO}:${IMAGE_TAG}"
        docker build -t $IMAGE_URI .
        docker push $IMAGE_URI
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

    - name: Fill in the new image ID in the ECS task definition
      run: |
        sed -i "s|<IMAGE_URI>|${{ env.IMAGE_URI }}|" ecs-task-def.json

    - name: Register ECS Task Definition
      id: register-task-def
      run: |
        TASK_DEF_ARN=$(aws ecs register-task-definition \
          --cli-input-json file://ecs-task-def.json \
          --query "taskDefinition.taskDefinitionArn" --output text)
        echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

    - name: Deploy to ECS Service
      run: |
        aws ecs update-service \
          --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
          --service ${{ secrets.ECS_SERVICE_NAME }} \
          --task-definition ${{ env.TASK_DEF_ARN }} \
          --force-new-deployment
